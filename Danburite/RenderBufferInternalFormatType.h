#pragma once

#include <GL/glew.h>

enum class RenderBufferInternalFormatType : GLenum
{
	/*
		Internal format must be a color-renderable,
		depth-renderable, or stencil-renderable format
	*/

	// Base Format (Depth / Stencil)

	DEPTH_COMPONENT = GL_DEPTH_COMPONENT,
	DEPTH_STENCIL = GL_DEPTH_STENCIL,


	// Base Format (Color)

	RED = GL_RED,
	RG = GL_RG,
	RGB = GL_RGB,
	RGBA = GL_RGBA,
	SRGB = GL_SRGB,
	SRGB_ALPHA = GL_SRGB_ALPHA,


	// Sized Format (Depth / Stencil)

	DEPTH_COMPONENT16 = GL_DEPTH_COMPONENT16,
	DEPTH_COMPONENT24 = GL_DEPTH_COMPONENT24,
	DEPTH_COMPONENT32 = GL_DEPTH_COMPONENT32,
	DEPTH_COMPONENT32F = GL_DEPTH_COMPONENT32F,
	DEPTH24_STENCIL8 = GL_DEPTH24_STENCIL8,
	DEPTH32F_STENCIL8 = GL_DEPTH32F_STENCIL8,
	STENCIL_INDEX8 = GL_STENCIL_INDEX8,


	// Sized Format (Color)

	R8 = GL_R8,
	R8UI = GL_R8UI,
	R8I = GL_R8I,
	R16UI = GL_R16UI,
	R16I = GL_R16I,
	R32UI = GL_R32UI,
	R32I = GL_R32I,
	RG8 = GL_RG8,
	RG8UI = GL_RG8UI,
	RG8I = GL_RG8I,
	RG16UI = GL_RG16UI,
	RG16I = GL_RG16I,
	RG32UI = GL_RG32UI,
	RG32I = GL_RG32I,
	RGB8 = GL_RGB8,
	RGB565 = GL_RGB565,
	RGBA8 = GL_RGBA8,
	SRGB8_ALPHA8 = GL_SRGB8_ALPHA8,
	RGB5_A1 = GL_RGB5_A1,
	RGBA4 = GL_RGBA4,
	RGB10_A2 = GL_RGB10_A2,
	RGBA8UI = GL_RGBA8UI,
	RGBA8I = GL_RGBA8I,
	RGB10_A2UI = GL_RGB10_A2UI,
	RGBA16UI = GL_RGBA16UI,
	RGBA16I = GL_RGBA16I,
	RGBA32I = GL_RGBA32I,
	RGBA32UI = GL_RGBA32UI
};
